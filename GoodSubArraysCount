import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef {
    
    private static class Pair {
        int low;
        int high;
        Pair(int l, int h) {
            low = l;
            high = h;
        }
    }
    
    private static int solve(int n, int[] a) {
        int prefixSum = 0;
        Map<Integer, Integer> lastOccuredIndex = new HashMap<>();
        Queue<Pair> badSubarrayEnding = new LinkedList<>();
        
        lastOccuredIndex.put(prefixSum, -1);
        
        for(int i=0;i<n;i++) {
            prefixSum += a[i];
            if(lastOccuredIndex.getOrDefault(prefixSum, -2) != -2) {
                badSubarrayEnding.add(new Pair(lastOccuredIndex.get(prefixSum) + 1, i));
            }
            lastOccuredIndex.put(prefixSum, i);
        }
        
        badSubarrayEnding.add(new Pair(n+1, n+1));
        
        int i = 0;
        int ans = 0;
        
        while(badSubarrayEnding.size() > 1) {
            if(i > badSubarrayEnding.peek().low) badSubarrayEnding.poll();
            ans += (badSubarrayEnding.peek().high - i - 1);
            // System.out.println(badSubarrayEnding.peek() - i - 1);
            i++;
        }
        
        return ans;
    }
    
	public static void main (String[] args) throws java.lang.Exception {
	    Scanner sc = new Scanner(System.in);
	    int n = sc.nextInt();
	    int[] a = new int[n];
	    for(int i=0;i<n;i++) a[i] = sc.nextInt();
	    System.out.println(solve(n,a));
	}
}



/** 
  Input:  5 
          1 2 -1 -1 3
          
  Output:  6
  
**/
